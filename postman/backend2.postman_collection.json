{
	"info": {
		"_postman_id": "cf30dd61-2129-45cb-83b5-31a1f000837f",
		"name": "backend2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "21812106"
	},
	"item": [
		{
			"name": "Public",
			"item": [
				{
					"name": "GET /stages",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"const schema = {\r",
									"    \"type\": \"array\",\r",
									"    \"items\": {\r",
									"        \"type\": \"object\",\r",
									"        \"properties\": {\r",
									"            \"id\": {\r",
									"                \"type\": \"number\"\r",
									"            },\r",
									"            \"startingLocation\": {\r",
									"                \"type\": \"string\",\r",
									"            },\r",
									"            \"arrivalLocation\": {\r",
									"                \"type\": \"string\",\r",
									"            },\r",
									"            \"distance\": {\r",
									"                \"type\": \"number\"\r",
									"            },\r",
									"            \"name\": {\r",
									"                \"type\": \"string\",\r",
									"            },\r",
									"        },\r",
									"        \"required\": [\"id\", \"startingLocation\", \"arrivalLocation\", \"name\", \"distance\"]\r",
									"    }\r",
									"};\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"pm.test(\"Response has correct length\", function () {\r",
									"    pm.expect(pm.response.json().length).eq(54)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/stages",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"stages"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /login",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"token\": \"111111111\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Private",
			"item": [
				{
					"name": "Teams",
					"item": [
						{
							"name": "GET /teams/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"id\": {\r",
											"            \"type\": \"number\"\r",
											"        },\r",
											"        \"name\": {\r",
											"            \"type\": \"string\",\r",
											"        },\r",
											"        \"contactEmail\": {\r",
											"            \"type\": \"string\",\r",
											"        },\r",
											"        \"location\": {\r",
											"            \"type\": \"string\",\r",
											"        },\r",
											"        \"plannedStartingTime\": {\r",
											"            \"type\": \"string\"\r",
											"        }\r",
											"    },\r",
											"    \"required\": [\"id\", \"name\", \"contactEmail\", \"location\", \"plannedStartingTime\"]\r",
											"};\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseUrl}}/teams/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT /teams/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"name\": \"Cisco XO\",\r\n    \"contactEmail\": \"test@test.hu\",\r\n    \"location\": \"Budapest\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teams/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE /teams/:id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teams/2",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"2"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Runners",
					"item": [
						{
							"name": "GET /teams/:id/runners",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"const schema = {\r",
											"    \"type\": \"array\",\r",
											"    \"items\": {\r",
											"        \"type\": \"object\",\r",
											"        \"properties\": {\r",
											"            \"id\": {\r",
											"                \"type\": \"number\"\r",
											"            },\r",
											"            \"firstName\": {\r",
											"                \"type\": \"string\",\r",
											"            },\r",
											"            \"lastName\": {\r",
											"                \"type\": \"string\",\r",
											"            },\r",
											"            \"speed\": {\r",
											"                \"type\": \"string\"\r",
											"            },\r",
											"            \"token\": {\r",
											"                \"type\": \"string\",\r",
											"            },\r",
											"            \"isAdmin\": {\r",
											"                \"type\": \"boolean\"\r",
											"            },\r",
											"            \"teamId\": {\r",
											"                \"type\": \"number\"\r",
											"            }\r",
											"        },\r",
											"        \"required\": [\"id\", \"firstName\", \"lastName\", \"speed\", \"token\"]\r",
											"    }\r",
											"};\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams/1/runners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1",
										"runners"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET /teams/:id/runners/:runnerId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"const schema = {\r",
											"    \"type\": \"object\",\r",
											"    \"properties\": {\r",
											"        \"id\": {\r",
											"            \"type\": \"number\"\r",
											"        },\r",
											"        \"firstName\": {\r",
											"            \"type\": \"string\",\r",
											"        },\r",
											"        \"lastName\": {\r",
											"            \"type\": \"string\",\r",
											"        },\r",
											"        \"speed\": {\r",
											"            \"type\": \"string\"\r",
											"        },\r",
											"        \"token\": {\r",
											"            \"type\": \"string\",\r",
											"        },\r",
											"        \"isAdmin\": {\r",
											"            \"type\": \"boolean\"\r",
											"        },\r",
											"        \"teamId\": {\r",
											"            \"type\": \"number\"\r",
											"        }\r",
											"    },\r",
											"    \"required\": [\"id\", \"firstName\", \"lastName\", \"speed\", \"token\"]\r",
											"};\r",
											"pm.test('Schema is valid', function () {\r",
											"    pm.response.to.have.jsonSchema(schema);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams/1/runners/1",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1",
										"runners",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "PUT /teams/:id/runners/:runnerId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Teszt\",\r\n    \"lastName\": \"Elek\",\r\n    \"speed\": \"05:24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teams/1/runners/10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1",
										"runners",
										"10"
									]
								}
							},
							"response": []
						},
						{
							"name": "DELETE /teams/:id/runners/:runnerId",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"url": {
									"raw": "{{baseUrl}}/teams/1/runners/10",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1",
										"runners",
										"10"
									]
								}
							},
							"response": []
						},
						{
							"name": "POST /teams/:id/runners",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 201\", function () {\r",
											"    pm.response.to.have.status(201);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Accept",
										"value": "application/json",
										"type": "default"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"firstName\": \"Teszt\",\r\n    \"lastName\": \"Elek\",\r\n    \"speed\": \"05:24\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseUrl}}/teams/1/runners",
									"host": [
										"{{baseUrl}}"
									],
									"path": [
										"teams",
										"1",
										"runners"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "GET /me",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"\r",
									"const schema = {\r",
									"    \"type\": \"object\",\r",
									"    \"properties\": {\r",
									"        \"id\": {\r",
									"            \"type\": \"number\"\r",
									"        },\r",
									"        \"firstName\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"lastName\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"speed\": {\r",
									"            \"type\": \"string\"\r",
									"        },\r",
									"        \"token\": {\r",
									"            \"type\": \"string\",\r",
									"        },\r",
									"        \"isAdmin\": {\r",
									"            \"type\": \"boolean\"\r",
									"        },\r",
									"        \"teamId\": {\r",
									"            \"type\": \"number\"\r",
									"        },\r",
									"        \"team\": {\r",
									"            \"type\": \"object\",\r",
									"            \"properties\": {\r",
									"                \"id\": {\r",
									"                    \"type\": \"number\"\r",
									"                },\r",
									"                \"name\": {\r",
									"                    \"type\": \"string\",\r",
									"                },\r",
									"                \"contactEmail\": {\r",
									"                    \"type\": \"string\",\r",
									"                },\r",
									"                \"location\": {\r",
									"                    \"type\": \"string\",\r",
									"                },\r",
									"                \"plannedStartingTime\": {\r",
									"                    \"type\": \"string\"\r",
									"                }\r",
									"            },\r",
									"            \"required\": [\"id\", \"name\", \"contactEmail\", \"location\", \"plannedStartingTime\"]\r",
									"        }\r",
									"    },\r",
									"    \"required\": [\"id\", \"firstName\", \"lastName\", \"speed\", \"token\"]\r",
									"};\r",
									"pm.test('Schema is valid', function () {\r",
									"    pm.response.to.have.jsonSchema(schema);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/me",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"me"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /nextRun",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/nextRun",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"nextRun"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /currentRunner",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "default"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/currentRunner",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"currentRunner"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /handover/start",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stageId\": 1,\r\n    \"time\": \"2023-04-01T09:00:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/handover/start",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"handover",
								"start"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /handover/finish",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"stageId\": 1,\r\n    \"time\": \"2023-04-01T09:00:00Z\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseUrl}}/handover/finish",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"handover",
								"finish"
							]
						}
					},
					"response": []
				}
			],
			"auth": {
				"type": "bearer",
				"bearer": [
					{
						"key": "token",
						"value": "111111111",
						"type": "string"
					}
				]
			},
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		},
		{
			"name": "Utils",
			"item": [
				{
					"name": "RESET DB",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resetDb",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resetDb"
							]
						}
					},
					"response": []
				},
				{
					"name": "RESET TIMES",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseUrl}}/resetTimes",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"resetTimes"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "backend-2.localhost/api/v1",
			"type": "default"
		}
	]
}